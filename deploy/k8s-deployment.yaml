#
# Deployment for Proxima.Host (API)
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxima-host-deployment
  labels:
    app: proxima-host
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxima-host
  template:
    metadata:
      labels:
        app: proxima-host
    spec:
      containers:
      - name: proxima-host
        image: moro91/proxima-host:latest
        # Set the environment variable to configure ASP.NET Core
        env:
          - name: ASPNETCORE_URLS
            value: "http://+:80"
        # Expose container ports (HTTP port 80; uncomment HTTPS if needed)
        ports:
          - containerPort: 80
          # - containerPort: 8081   # Uncomment if HTTPS on port 8081 is used
---
#
# Service for Proxima.Host (API)
#
apiVersion: v1
kind: Service
metadata:
  name: proxima-host-service
spec:
  selector:
    app: proxima-host
  ports:
    - protocol: TCP
      port: 8080       # Service port exposed inside the cluster
      targetPort: 80   # Container port to which traffic is directed
    # Optionally, if you need to expose an HTTPS port, add:
    # - protocol: TCP
    #   port: 8081
    #   targetPort: 8081
  type: ClusterIP
---
#
# Deployment for Proxima.UI (Client)
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxima-ui-deployment
  labels:
    app: proxima-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxima-ui
  template:
    metadata:
      labels:
        app: proxima-ui
    spec:
      containers:
      - name: proxima-ui
        image: moro91/proxima-ui:latest
        ports:
          - containerPort: 80
---
#
# Service for Proxima.UI (Client)
#
apiVersion: v1
kind: Service
metadata:
  name: proxima-ui-service
spec:
  selector:
    app: proxima-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
#
# Ingress: Routes requests to the appropriate Service.
#   - Requests to /api are routed to proxima-host-service on port 8080.
#   - Requests to / are routed to proxima-ui-service on port 80.
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxima-ingress
spec:
  # Use the specified ingress controller (e.g., traefik)
  ingressClassName: traefik  
  rules:
    - host: proxima.local
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: proxima-host-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxima-ui-service
                port:
                  number: 80
