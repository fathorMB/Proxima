---
# 1) ServiceAccount for Proxima.Host
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxima-host-serviceaccount
  namespace: default

---
# 2) ClusterRole granting read access to "nodes"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # rename if you prefer something more descriptive
  name: proxima-host-cluster-read
rules:
  - apiGroups: [""]
    resources:
      - "nodes"
      - "namespaces"
    verbs:
      - "get"
      - "list"
      - "watch"


---
# 3) ClusterRoleBinding to bind the above ClusterRole to our ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxima-host-cluster-read-nodes-binding
subjects:
  - kind: ServiceAccount
    name: proxima-host-serviceaccount
    namespace: default
roleRef:
  kind: ClusterRole
  name: proxima-host-cluster-read-nodes
  apiGroup: rbac.authorization.k8s.io

---
# 4) Deployment for Proxima.Host (API) using the new ServiceAccount
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxima-host-deployment
  labels:
    app: proxima-host
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxima-host
  template:
    metadata:
      labels:
        app: proxima-host
    spec:
      serviceAccountName: proxima-host-serviceaccount  # <-- important change
      containers:
      - name: proxima-host
        image: moro91/proxima-host:latest
        env:
          - name: ASPNETCORE_URLS
            value: "http://+:80"
        ports:
          - containerPort: 80

---
# 5) Service for Proxima.Host (API)
apiVersion: v1
kind: Service
metadata:
  name: proxima-host-service
spec:
  selector:
    app: proxima-host
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
  type: ClusterIP

---
# 6) Deployment for Proxima.UI (Client)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxima-ui-deployment
  labels:
    app: proxima-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxima-ui
  template:
    metadata:
      labels:
        app: proxima-ui
    spec:
      containers:
      - name: proxima-ui
        image: moro91/proxima-ui:latest
        ports:
          - containerPort: 80

---
# 7) Service for Proxima.UI (Client)
apiVersion: v1
kind: Service
metadata:
  name: proxima-ui-service
spec:
  selector:
    app: proxima-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# 8) Ingress routes /api to proxima-host-service:8080 and / to proxima-ui-service:80
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxima-ingress
spec:
  ingressClassName: traefik
  rules:
    - host: proxima.local
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: proxima-host-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxima-ui-service
                port:
                  number: 80
